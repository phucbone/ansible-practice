---
- name: Configure ES Cluster
  hosts: all
  become: true
  vars:
    es_user: "elasticsearch"
    es_cluster_name: "mspplus-es"
    es_node_name: "cl-mspplus-es01"
    es_cluster_initial_master_nodes: "['cl-mspplus-es01']"
    es_network_hosts: "70.222.5.21"
    es_http_port: "9200"
    es_transport_hosts: "0.0.0.0"
    es_data_path: "/opt/elasticsearch/data/"
    es_log_path: "/opt/elasticsearch/log/"
    es_discovery_seed_hosts: "['70.222.5.21', '70.222.5.22', '70.222.5.23']"
    es_config_file: "/etc/elasticsearch/elasticsearch.yml"
    es_http_host: "0.0.0.0"
  tasks:
    - name: Backup & Modify {{ es_config_file }}
      ansible.builtin.lineinfile:
        backup: true
        path: "{{ es_config_file }}"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        owner: "{{ es_user }}"
        group: "{{ es_user }}"
        mode: "0770"
      loop:
        - { regexp: "^#cluster.name:|^cluster.name:", line: "cluster.name: {{ es_cluster_name }}" }
        - { regexp: "^#node.name:|^node.name:", line: "node.name: {{ es_node_name }}" }
        - { regexp: "^#network.host:|^network.host:", line: "network.host: {{ es_network_hosts }}" }
        - { regexp: "^#http.port:|^http.port:", line: "http.port: {{ es_http_port }}" }
        - { regexp: "^#transport.host:|^transport.host:", line: "transport.host: {{ es_transport_hosts }}" }
        - { regexp: "^#path.data:|^path.data:", line: "path.data: {{ es_data_path }}" }
        - { regexp: "^#path.logs:|^path.logs:", line: "path.logs: {{ es_log_path }}" }
        - { regexp: "^#discovery.seed_hosts:|^discovery.seed_hosts:", line: "discovery.seed_hosts: {{ es_discovery_seed_hosts }}" }
        - { regexp: "^#http.host:|^http.host:", line: "http.host: {{ es_http_host }}" }
        - regexp: "^#cluster.initial_master_nodes:|^cluster.initial_master_nodes:"
          line: "cluster.initial_master_nodes: {{ es_cluster_initial_master_nodes }}"
        - regexp: "^#action.auto_create_index:|^action.auto_create_index:"
          line: "action.auto_create_index: .monitoring*,.watches,.triggered_watches,.watcher-history*,.ml*"

    - name: Enable Security features
      ansible.builtin.lineinfile:
        backup: true
        path: "{{ es_config_file }}"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        owner: "{{ es_user }}"
        group: "{{ es_user }}"
        mode: "0770"
      loop:
        - regexp: "^# Enable Security features|^#Enable Security features"
          line: "# Enable Security features"
        - regexp: "^#xpack.security.enabled:|^xpack.security.enabled:"
          line: "xpack.security.enabled: true"

    - name: Restart ES service for Security features
      ansible.builtin.systemd_service:
        name: elasticsearch
        state: restarted
        enabled: true

    - name: Enable TLS features
      ansible.builtin.lineinfile:
        backup: true
        path: "{{ es_config_file }}"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        owner: "{{ es_user }}"
        group: "{{ es_user }}"
        mode: "0770"
      loop:
        - regexp: "^# Enable TLS|^#Enable TLS"
          line: "# Enable TLS features"
        - regexp: "^#xpack.security.transport.ssl.enabled:|^xpack.security.transport.ssl.enabled:"
          line: "xpack.security.transport.ssl.enabled: true"
        - regexp: "^#xpack.security.transport.ssl.client_authentication:|^xpack.security.transport.ssl.client_authentication:"
          line: "xpack.security.transport.ssl.client_authentication: required"
        - regexp: "^#xpack.security.transport.ssl.verification_mode:|^xpack.security.transport.ssl.verification_mode:"
          line: "xpack.security.transport.ssl.verification_mode: certificate"
        - regexp: "^#xpack.security.transport.ssl.keystore.type:|^xpack.security.transport.ssl.keystore.type:"
          line: "xpack.security.transport.ssl.keystore.type: PKCS12"
        - regexp: "^#xpack.security.transport.ssl.keystore.path:|^xpack.security.transport.ssl.keystore.path:"
          line: "xpack.security.transport.ssl.keystore.path: elastic-certificates.p12"
        - regexp: "^#xpack.security.transport.ssl.truststore.type:|^xpack.security.transport.ssl.truststore.type:"
          line: "xpack.security.transport.ssl.truststore.type: PKCS12"
        - regexp: "^#xpack.security.transport.ssl.truststore.path:|^xpack.security.transport.ssl.truststore.path:"
          line: "xpack.security.transport.ssl.truststore.path: elastic-certificates.p12"
        # - regexp: "^#xpack.security.transport.ssl.keystore.password:|^xpack.security.transport.ssl.keystore.password:"
        #   line: "xpack.security.transport.ssl.keystore.password: mspplus"

    - name: Restart ES service for TLS features
      ansible.builtin.systemd_service:
        name: elasticsearch
        state: restarted

    # - name: Enable SSL features
    #   ansible.builtin.lineinfile:
    #     backup: true
    #     path: "{{ es_config_file }}"
    #     regexp: "{{ item.regexp }}"
    #     line: "{{ item.line }}"
    #     owner: "{{ es_user }}"
    #     group: "{{ es_user }}"
    #     mode: "0770"
    #   loop:
    #     - regexp: "^# Enable HTTPS|^#Enable HTTPS"
    #       line: "# Enable HTTPS features"
    #     - regexp: "^#xpack.security.http.ssl.enabled:|^xpack.security.http.ssl.enabled:"
    #       line: "xpack.security.http.ssl.enabled: true"
    #     - regexp: "^#xpack.security.http.ssl.keystore.type:|^xpack.security.http.ssl.keystore.type:"
    #       line: "xpack.security.http.ssl.keystore.type: PKCS12"
    #     - regexp: "^#xpack.security.http.ssl.keystore.path:|^xpack.security.http.ssl.keystore.path:"
    #       line: "xpack.security.http.ssl.keystore.path: elastic-certificates.p12"
    #     - regexp: "^#xpack.security.http.ssl.keystore.password:|^xpack.security.http.ssl.keystore.password:"
    #       line: "xpack.security.http.ssl.keystore.password: mspplus"
    #     - regexp: "^#xpack.security.http.ssl.client_authentication:|^xpack.security.http.ssl.client_authentication:"
    #       line: "xpack.security.http.ssl.client_authentication: required"

    # - name: Restart ES service for SSL features
    #   ansible.builtin.systemd_service:
    #     name: elasticsearch
    #     state: restarted

    # - name: Check ES user exists
    #   ansible.builtin.shell:
    #   args:
    #     executable: /bin/bash
    #     chdir: "/usr/share/elasticsearch/bin"
    #     cmd: |
    #       set -o pipefail
    #       ./elasticsearch-users list | grep {{ item }} | awk '{print $1}'
    #   with_items:
    #     - "msp"
    #     - "sreplusop"
    #     - "mspplus"
    #   register: es_new_user_data
    #   changed_when: es_new_user_data.changed

    # - name: Print
    #   ansible.builtin.debug:
    #     var: es_new_user_data
